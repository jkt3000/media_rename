#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), "../lib"))

require "bundler/setup"
require "media_rename"
require 'thor'


class MediaRenameCLI < Thor


  desc "rename_from_plex <path>", "Renames media files from plexDB"
  method_option :preview,
                type: :boolean,
                default: false,
                desc: "Dry run - don't actually make changes"
  method_option :plex_library,
                type: :string,
                aliases: 'p',
                desc: "Plex Library to search against"
  method_option :plex_host, 
                type: :string,
                desc: "Plex Server IP address" 
  method_option :plex_port, 
                type: :string,
                desc: "Plex Server port" 
  method_option :plex_token, 
                type: :string,
                desc: "Plex token" 

  

  def rename_from_plex(path)
    init_plex(options)
    params = options.inject({}){|memo,(k,v)| memo[k.to_sym] = v; memo}
    renamer = MediaRename::PlexRenamer.new(path, params)
    renamer.run
  end
  


  private

  def init_plex(options)
    Plex.configure do |config|
      if host = options.fetch(:plex_host, nil)
        config[:host] = host
      end
      if port = options.fetch(:plex_port, nil)
        config[:port] = port
      end
      if token = options.fetch(:plex_token, nil)
        config[:token] = token
      end
    end
  end
end


MediaRenameCLI.start