#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path(File.join(File.dirname(__FILE__), "../lib"))

require "bundler/setup"
require "media_rename"
require 'thor'
require 'io/console'

class MediaRenameCLI < Thor

  desc "plex <path>", "Rename media files based on data from Plex database"

  method_option :preview,
                type: :boolean,
                default: false,
                desc: "Dry run - don't actually make changes"
  method_option :host,
                type: :string,
                desc: "Plex Server host/ip address (use https://x.x.x.x for https or ip address for http)"
  method_option :port,
                type: :string,
                desc: "Plex Server port"
  method_option :token,
                type: :string,
                desc: "Plex token"
  method_option :verbose,
                type: :boolean,
                aliases: 'v',
                default: false,
                desc: "Verbose"
  method_option :target_path,
                type: :string,
                aliases: 't',
                desc: "Target path"

  method_option :confirm,
                type: :boolean,
                aliases: 'c',
                default: true,
                desc: "Require Confirmation"

  def plex(path)
    paths  = Dir.glob(path+"*").flatten.compact
    puts "-------------------------------------------------------------------------------"
    puts "Rename called on #{paths} with #{options}"
    puts "-------------------------------------------------------------------------------\n"
    paths.each {|path| rename(path.strip)}
  end

  private

  def rename(path)
    renamer = MediaRename::PlexRenamer.new(path, options)
    renamer.rename_files
    puts
  end
end


MediaRenameCLI.start
